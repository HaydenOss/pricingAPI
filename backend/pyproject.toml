[project]
name = "pricingapi-backend"
version = "0.1.0"
description = ""
authors = [{ name = "Hayden", email = "test@gmail.com" },]
readme = "../README.md"
package-mode = false
requires-python = ">=3.10,<4.0"


dependencies = [
    "annotated-types==0.7.0",
    "anyio==4.9.0",
    "build==1.2.2.post1",
    "cachecontrol==0.14.3",
    "certifi==2025.6.15",
    "cfgv==3.4.0",
    "charset-normalizer==3.4.2",
    "cleo==2.1.0",
    "click==8.2.1",
    "colorama==0.4.6",
    "crashtest==0.4.1",
    "distlib==0.3.9",
    "dulwich==0.22.8",
    "fastapi==0.115.14",
    "fastjsonschema==2.21.1",
    "filelock==3.18.0",
    "findpython==0.6.3",
    "greenlet==3.2.3",
    "h11==0.16.0",
    "httpcore==1.0.9",
    "httpx==0.28.1",
    "identify==2.6.12",
    "idna==3.10",
    "installer==0.7.0",
    "jaraco-classes==3.4.0",
    "jaraco-context==6.0.1",
    "jaraco-functools==4.2.1",
    "keyring==25.6.0",
    "more-itertools==10.7.0",
    "msgpack==1.1.1",
    "nodeenv==1.9.1",
    "packaging==25.0",
    "pbs-installer==2025.7.2",
    "pkginfo==1.12.1.2",
    "platformdirs==4.3.8",
    "poetry==2.1.3",
    "poetry-core==2.1.3",
    "pre-commit==4.2.0",
    "pydantic==2.11.7",
    "pydantic-core==2.33.2",
    "pyproject-hooks==1.2.0",
    "python-dotenv==1.1.1",
    "pywin32-ctypes==0.2.3",
    "pyyaml==6.0.2",
    "rapidfuzz==3.13.0",
    "requests==2.32.4",
    "requests-toolbelt==1.0.0",
    "shellingham==1.5.4",
    "sniffio==1.3.1",
    "supabase==2.17.0",
    "sqlalchemy==2.0.41",
    "starlette==0.46.2",
    "tomlkit==0.13.3",
    "trove-classifiers==2025.5.9.12",
    "typing-inspection==0.4.1",
    "typing-extensions==4.14.0",
    "urllib3==2.5.0",
    "uvicorn==0.35.0",
    "virtualenv==20.31.2",
    "zstandard==0.23.0",
    "isort==6.0.1",
    "black==25.1.0",
    "cors (>=1.0.1,<2.0.0)"
]


[tool.poetry.group.dev.dependencies]
ruff = "^0.12.1"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
line-length = 100
target-version = "py312"

lint.select = [
  "E",    # pycodestyle (style)
  "F",    # pyflakes (bug detection)
  "B",    # flake8-bugbear (best practices)
  "I",    # isort (import sorting)
  "UP",   # pyupgrade (modern syntax)
  "C90",  # mccabe (complexity)
  "N",    # pep8-naming (naming conventions)
  "ANN"   # flake8-annotations (type hinting)
]

lint.ignore = [
  "E501",     # Line too long (black handles this)
  "ANN101",   # Self argument missing type annotation
  "ANN102"    # Cls argument missing type annotation
]

exclude = [
  "virtual_env",      
  "__pycache__",
  "node_modules",
  "build",
  "dist",
  "migrations"
]
